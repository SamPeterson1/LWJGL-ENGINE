/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    `java-library`
    id("com.github.johnrengelman.shadow") version "8.0.0"
    kotlin("jvm") version "1.8.0" // or any Kotlin version you're using
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    kotlinOptions {
        jvmTarget = "17"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation("org.lwjgl:lwjgl-opengl:3.2.3")
    implementation("org.lwjgl:lwjgl-glfw:3.2.3")
    implementation(files("libs/pngdecoder-1.0.jar"))
    runtimeOnly("org.lwjgl:lwjgl::natives-linux")
    runtimeOnly("org.lwjgl:lwjgl-opengl::natives-linux")
    runtimeOnly("org.lwjgl:lwjgl-glfw::natives-linux")

    // This dependency is used by the application.
    implementation(libs.guava)
}

tasks.register<Copy>("copyResources") {
    from("res")
    into("build/classes/java/main/res")
}

tasks.named("build").configure {
    dependsOn("copyResources")
}

tasks.named("run").configure {
    dependsOn("copyResources")
}

tasks.named("shadowJar").configure {
    dependsOn("copyResources")
}

tasks.named("jar").configure {
    dependsOn("copyResources")
}

tasks.named("inspectClassesForKotlinIC") {
    dependsOn("copyResources")
}

tasks.shadowJar {
    manifest {
        attributes("Main-Class" to "main.Main")
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "main.Main"
}